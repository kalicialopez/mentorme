# Generated by Django 5.1.4 on 2025-01-14 06:21

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MentorshipSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_time', models.DateTimeField()),
                ('duration', models.DurationField()),
                ('mode', models.SmallIntegerField(choices=[(1, 'In Person'), (2, 'Virtual')])),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('screen_name', models.CharField(max_length=100, unique=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures')),
                ('bio', models.TextField(blank=True, max_length=1000)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, srid=4326)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MentorshipSessionReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.TextField(choices=[('Mentee', 'Mentee'), ('Mentor', 'Mentor')])),
                ('rating', models.IntegerField(choices=[(1, 'Poor'), (2, 'Fair'), (3, 'Good'), (4, 'Very Good'), (5, 'Excellent')])),
                ('comment', models.TextField()),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='mentoring.mentorshipsession')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_reviews', to='mentoring.profile')),
            ],
        ),
        migrations.AddField(
            model_name='mentorshipsession',
            name='mentee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentee_sessions', to='mentoring.profile'),
        ),
        migrations.AddField(
            model_name='mentorshipsession',
            name='mentor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentor_sessions', to='mentoring.profile'),
        ),
        migrations.CreateModel(
            name='SkillProficiency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency', models.IntegerField(choices=[(1, 'Fundamental'), (2, 'Novice'), (3, 'Intermediate'), (4, 'Advanced'), (5, 'Expert')])),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_proficiencies', to='mentoring.profile')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_proficiencies', to='mentoring.skill')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='skills',
            field=models.ManyToManyField(related_name='proficient_profiles', through='mentoring.SkillProficiency', to='mentoring.skill'),
        ),
    ]
