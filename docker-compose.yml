# docker-compose build
volumes:
  postgis-data:

services:
  web:
    build:
      context: .
    volumes:
      - "./app:/app"
      - "./pyproject.toml:/app/pyproject.toml:ro"
      - "./uv.lock:/app/uv.lock:ro"
    ports:
      - '8000:8000'
    environment:
      - POSTGRES_DB=mentorme
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      db:
        condition: service_healthy
        restart: true

  db:
    image: postgis/postgis:17-3.5
    volumes:
      - postgis-data:/var/lib/postgresql
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_DB=mentorme
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - ALLOW_IP_RANGE=0.0.0.0/0
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
      - RUN_AS_ROOT=true
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      # https://docs.docker.com/reference/dockerfile/#healthcheck
      test: "PGPASSWORD=postgres pg_isready -h 127.0.0.1 -U postgres -d mentorme"
      start_period: 10s
      start_interval: 2s
      timeout: 2s
      interval: 30s
      retries: 10
